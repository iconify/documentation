// Also see: src/themes.ts
$default_theme: 'icons';
$themes_map: (
	// palette('blue', 600)
	$default_theme: #1769aa,
	// palette('green', 600)
	'api': #327335,
	// palette('cyan', 600)
	'code': #00717f,
	// custom
	// 'develop': #2e7a55,
	// palette('light-blue', 600)
	'develop': #026c9c,
	// mix(palette('indigo', 600), palette('deep-purple', 550))
	'design': #5a4fb7,
	// palette('blue-gray', 600)
	'legacy': #506874,
	// articles: custom color
	'articles': #3c7299
);

// Extra colors for future use:

// custom
// #4C7566

// palette('brown', 600)
// #735145

// Function to get color
@function theme($theme, $key) {
	$color: map-get($themes_map, $theme);

	// Link or background: return as is
	@if $key == 'link' or $key == 'background' {
		@return $color;
	}

	// Navigation
	@if $key == 'nav-secondary' {
		@return mix($color, $body-background, 80%);
	}
	@if $key == 'nav-arrow' {
		@return mix($color, $body-background, 50%);
	}
	@if $key == 'nav-border' {
		@return mix($color, $body-background, 25%);
	}

	// Unknown key: show warning and return default color
	@warn "Unknown key for theme mixin call: #{$key}";
	@return $color;
}

// Add all themes
@mixin all-themes($property, $key) {
	.website-docs & {
		#{$property}: theme($default_theme, $key);
	}
	@each $theme, $color in $themes_map {
		@if $theme != $default_theme {
			.theme-#{$theme} & {
				#{$property}: theme($theme, $key);
			}
		}
	}
}
